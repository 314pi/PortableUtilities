[Ruby]
lexer=ruby
NumStyleBits=6
keywords.0=name:Keywords::__FILE__ alias and begin break case class def defined? do else elsif end ensure false for if in module next \
nil not or redo rescue retry return self super then true undef unless until when while yield \
__LINE__ BEGIN END require \


style.33=name:LineNumbers,fore:clBlack,back:clSilver,font:Arial
style.34=name:Ok Braces,fore:clBlue,bold
style.35=name:Bad Braces,fore:clRed,bold
style.36=name:Control Chars,back:clSilver
style.37=name:Indent Guide,fore:clSilver
style.0=name:White space,fore:clGray
style.1=name:Error,fore:clRed
style.2=name:Line Comment,fore:clGreen
style.3=name:POD,fore:#004000,back:#C0FFC0
style.4=name:Number,fore:clTeal
style.5=name:Keyword,fore:clNavy,bold
style.6=name:String,fore:clPurple
style.7=name:Character,fore:clPurple
style.8=name:Class name,fore:clBlue,bold
style.9=name:Function or method name,fore:#007F7F,bold
style.10=name:Operators,bold
style.11=name:Identifiers
style.12=name:Regex,back:#A0FFA0
style.13=name:Global,fore:#800080
style.14=name:Symbol,fore:#C0A030
style.15=name:Module Name,fore:#A000A0,bold
style.16=name:Instance Var,fore:#B00080
style.17=name:Class Var,fore:#8000B0
style.18=name:Backtick,fore:#FFFF00,back:#A08080
style.19=name:Data Section,fore:#600000,back:#FFF0D8,eolfilled
style.20=name:Here Delimiter,fore:#000000,back:#DDD0DD
style.21=name:Here Q,fore:#7F007F,back:#DDD0DD,eolfilled,notbold
style.22=name:Here QQ,fore:#7F007F,back:#DDD0DD,eolfilled,bold
style.23=name:Here QX,fore:#7F007F,back:#DDD0DD,eolfilled,italics
style.24=name:String Q,fore:#7F007F
style.25=name:String QQ,fore:clPurple
style.26=name:String QX,fore:#FFFF00,back:#A08080
style.27=name:String QR,fore:#000000,back:#A0FFA0
style.28=name:String QW,fore:#000000,back:#FFFFE0
style.29=name:Word Demoted,fore:clBlue,bold
style.30=name:StdIn,back:#FF8080
style.31=name:StdOut,back:#FF8080
style.40=name:StdErr,back:#FF8080
style.41=name:Upper Bound

CommentBoxStart=#
CommentBoxEnd=#
CommentBoxMiddle=#
CommentBlock=#
CommentStreamStart=/*
CommentStreamEnd=*/
AssignmentOperator==
EndOfStatementOperator=;