[ADA]
lexer=ada
keywords.0=name:Keywords::abort abstract accept access aliased all array at begin body \
case constant declare delay delta digits do else elsif end entry exception exit for \
function generic goto if in is limited loop new null of others out package pragma \
private procedure protected raise range record renames requeue return reverse \
select separate subtype tagged task terminate then type until use when while with

keywords.1=name:operators::abs and mod not or rem xor

style.33=name:LineNumbers,fore:clBlack,back:clSilver,font:Arial
style.34=name:Ok Braces,fore:clBlue,bold
style.35=name:Bad Braces,fore:clRed,bold
style.36=name:Control Chars,back:clSilver
style.37=name:Indent Guide,fore:clSilver
style.0=name:Default,fore:clGray
style.1=name:Keyword,fore:#00007F,bold
style.2=name:Identifiers
style.3=name:Number,fore:clTeal
style.4=name:Operators (delimiters)
style.5=name:Character,fore:clPurple
style.6=name:End of line where character is not closed,fore:clWhite,back:#E0C0E0,eolfilled
style.7=name:String,fore:clPurple
style.8=name:End of line where string is not closed,fore:clWhite,back:#E0C0E0,eolfilled
style.9=name:Label,fore:#7F0000,eolfilled
style.10=name:Comment,fore:clGreen
style.11=name:Illegal token,fore:clRed

CommentBoxStart=--
CommentBoxEnd=--
CommentBoxMiddle=--
CommentBlock=--
CommentStreamStart=--
CommentStreamEnd=--
AssignmentOperator==
EndOfStatementOperator=;