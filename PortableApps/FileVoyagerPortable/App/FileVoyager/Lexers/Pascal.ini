[Pascal]
lexer=pascal
keywords.0=name:Keywords::const type var begin end array set packed record string if then else while for to downto\
do with repeat until case of goto exit label procedure function nil file and or not xor\
div mod external asm inline object constructor destructor virtual far assembler near inherited stdcall cdecl export exports\
end. class ansistring raise try except on index name finally false true initialization finalization override overload at\
threadvar resourcestring as dispinterface in is out program package library unit interface uses implementation shr

keywords.1=name:Class Keywords::write read default public protected private property published stored automated

style.33=name:LineNumbers,fore:clBlack,back:clSilver,font:Arial
style.34=name:Ok Braces,fore:clBlue,bold
style.35=name:Bad Braces,fore:clRed,bold
style.36=name:Control Chars,back:clSilver
style.37=name:Indent Guide,fore:clSilver
style.32=name:Default,fore:clBlack   
style.0=name:White space,fore:#808080  
style.1=name:Identifier,fore:clWindowText
style.2=name:Comment{...},fore:#007F00 
style.3=name:Comment(*...*),fore:#007F00 
style.4=name:Line Comment,fore:#007F00
style.5=name:Preprocessor {$...},fore:#7F7F00 
style.6=name:Preprocessor {*$...*},fore:#7F7F00  
style.7=name:Number,fore:#007F7F   
style.8=name:Hex Number,fore:#007F7F  
style.9=name:Keyword,fore:#00007F,bold    
style.10=name:Single quoted string,fore:#7F007F,italics 
style.11=name:String not closed,fore:#000000,italics 
style.12=name:Character,fore:#7F007F,italics 
style.13=name:Operators     
style.14=name:ASM,fore:#804080

CommentBoxStart={
CommentBoxEnd=}
CommentBoxMiddle=*
CommentBlock=//
CommentStreamStart={
CommentStreamEnd=}
AssignmentOperator=:=
EndOfStatementOperator=;